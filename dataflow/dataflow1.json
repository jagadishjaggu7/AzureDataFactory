{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "RemoveColumnsFanmeLname",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "sort1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Index as integer,",
				"          CustomerId as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Company as string,",
				"          City as string,",
				"          Country as string,",
				"          {Phone 1} as string,",
				"          {Phone 2} as string,",
				"          Email as string,",
				"          SubscriptionDate as string,",
				"          Website as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 derive(Name = concat(FirstName,LastName),",
				"          SubscriptionDate = toDate(SubscriptionDate, 'dd-MM-yyyy')) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          Index,",
				"          Name,",
				"          CustomerId,",
				"          Company,",
				"          City,",
				"          Country,",
				"          {Phone 1},",
				"          {Phone 2},",
				"          Email,",
				"          SubscriptionDate,",
				"          Website",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveColumnsFanmeLname",
				"RemoveColumnsFanmeLname sort(asc(SubscriptionDate, true)) ~> sort1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     input(",
				"          IndexID as string,",
				"          CustomerId as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Company as string,",
				"          City as string,",
				"          Country as string,",
				"          {Phone 1} as string,",
				"          {Phone 2} as string,",
				"          Email as string,",
				"          SubscriptionDate as date,",
				"          Website as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}